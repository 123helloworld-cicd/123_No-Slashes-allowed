resources:
  - name: myImage
    type: image
    configuration:
      integrationName: docker
    imageName: trriplejay/simpleserver
    initialVersion:
      imageTag: master

pipelines:
  - name: test_pipeline_1
    setup:
      environmentVariables:
        readOnly:
          ENV1: value-pipe-1
          ENV2: value-pipe-2
      runtime:
        type: image
        image:
          auto: true
          language: java
          versions: v1.1
        custom:
          name: test
          tag: test
          options: test
    steps:
      - name: in_trigger_step
        type: bash
        configuration:
          affinityGroup: test_group
        setup:
          environmentVariables:
            normal:
              ENV1: value1
              ENV2: value2
            encrypted:
              SECURE_ENV1: test_value
              SECURE_ENV2: test_value
          runtime:
            type: image
            image:
              language: java
              versions: v1.1
            custom:
              name: test
              tag:  test
              options: test
        requires:
          resources:
            - myImage
          integrations:
            - docker
        execution:
          onExecute:
            - |
              echo "image integration password is %%resources.myImage.integration.password%%" > test.txt
              echo "image is %%resources.myImage.resourceName%%" >> test.txt
              echo "tag is %%resources.myImage.imageTag%%" >> test.txt
              echo "integration username is %%integrations.docker.username%%" >> test.txt
              echo "step json path is $STEP_JSON_PATH" >> test.txt
              echo "this is a bad env -- $BAD_ENV -- " >> test.txt

            - printenv
            - cat $STEP_JSON_PATH
            - cat test.txt
          #  - replace_tags --tags-only test.txt
            - cat test.txt | replace_tags --tags-only --stdin
            - cat test.txt | replace_tags --stdin
            - docker login -u "%%resources.myImage.integration.username%%" -p "%%resources.myImage.integration.password%%"
            # - cat test.txt
            # - cat test.txt | replace_tags --stdin --envs-only
            # - echo "================= done stdin 1 =================="
            # # - replace_tags test.txt
            # - cat test.txt
            # - echo "================== done unchanged file ==========="
            # - cat test.txt | replace_tags --stdin
            # - echo "================== done stdin 2 ==================="
            # - cp test.txt test2.txt
            # - replace_tags --envs-only test.txt
            # - echo "====================== done file1=========="
            # - cat test.txt
            # - echo "================== done check file1 ============="
            # - replace_tags test2.txt
            # - echo "====================== done file2=========="
            # - cat test2.txt
            # - echo "=================== done check file2 =========="
            # - replace_tags file.txt --stdin file2.txt file3.txt --tags-only <<< "Hello world"
            # - replace_tags --envs-only

      - name: main_step
        type: bash
        configuration:
          affinityGroup: test_group
        setup:
          environmentVariables:
            normal:
              ENV1: value1
              ENV2: value2
            encrypted:
              SECURE_ENV1: test_value
              SECURE_ENV2: test_value
          runtime:
            type: host
            image:
              language: java
              versions: v1.1
            custom:
              name: test
              tag:  test
              options: test
        requires:
          integrations:
            - github
        triggeredBy:
          steps:
            - in_trigger_step
        execution:
          onStart:
            - echo "Prepping build environment"
          onExecute:
            - echo "executing task command 1"
            - echo "executing task command 2"
          onSuccess:
            - echo "Job well done!"
          onFailure:
            - echo "uh oh, something went wrong"
          onComplete: #always
            - echo "Cleaning up some stuff"
          onCancel:
            - echo "Someone cancelled the job"
      - name: other_step
        type: bash
        configuration:
          affinityGroup: test_group
        setup:
          environmentVariables:
            normal:
              ENV1: value11
              ENV2: value21
            encrypted:
              SECURE_ENV1: test_value1
              SECURE_ENV2: test_value1
          runtime:
            type: host
            image:
              language: java
              versions: v1.1
            custom:
              name: test
              tag:  test
              options: test
        requires:
          integrations:
            - github
        triggeredBy:
          steps:
            - main_step
        execution:
          onStart:
            - echo "Prepping build environment"
          onExecute:
            - echo "executing task command 1"
            - echo "executing task command 2"
          onSuccess:
            - echo "Job well done!"
          onFailure:
            - echo "uh oh, something went wrong"
          onComplete: #always
            - echo "Cleaning up some stuff"
          onCancel:
            - echo "Someone cancelled the job"
